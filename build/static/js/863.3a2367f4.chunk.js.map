{"version":3,"file":"static/js/863.3a2367f4.chunk.js","mappings":"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","sources":["../node_modules/@ledgerhq/devices/src/hid-framing.ts","../node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js","../node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js","../node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/clean.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/cmp.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/coerce.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-build.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-loose.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/diff.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/eq.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/gt.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/gte.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/inc.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/lt.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/lte.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/major.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/minor.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/neq.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/patch.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/prerelease.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/rcompare.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/rsort.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/satisfies.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/sort.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/valid.js","../node_modules/@ledgerhq/devices/node_modules/semver/index.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/constants.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/debug.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/identifiers.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/lrucache.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/parse-options.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/gtr.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/intersects.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/ltr.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/max-satisfying.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-satisfying.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-version.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/outside.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/simplify.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/subset.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/to-comparators.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/valid.js","../node_modules/@ledgerhq/devices/src/index.ts","../node_modules/@ledgerhq/logs/src/index.ts","../node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts","../node_modules/process/browser.js"],"sourcesContent":["import { TransportError } from \"@ledgerhq/errors\";\nexport type ResponseAcc =\n  | {\n      data: Buffer;\n      dataLength: number;\n      sequence: number;\n    }\n  | null\n  | undefined;\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0,\n};\n\n/**\n *\n */\nconst createHIDframing = (channel: number, packetSize: number) => {\n  return {\n    makeBlocks(apdu: Buffer): Buffer[] {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([\n        data, // fill data with padding\n        Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n      ]);\n      const blocks: Buffer[] = [];\n\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n\n      return blocks;\n    },\n\n    reduceResponse(acc: ResponseAcc, chunk: Buffer): ResponseAcc {\n      let { data, dataLength, sequence } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence,\n      };\n    },\n\n    getReducedResult(acc: ResponseAcc): Buffer | null | undefined {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    },\n  };\n};\n\nexport default createHIDframing;\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range\n      .trim()\n      .split(/\\s+/)\n      .join(' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => comps.join(' ').trim())\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // Otherwise it can be determined by checking the high version\n\n    if (highVersion.patch) {\n      // anything higher than a patch bump would result in the wrong version\n      return 'patch'\n    }\n\n    if (highVersion.minor) {\n      // anything higher than a minor bump would result in the wrong version\n      return 'minor'\n    }\n\n    // bumping major/minor/patch all have same result\n    return 'major'\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","class LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","import semver from \"semver\";\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\n\nexport enum DeviceModelId {\n  blue = \"blue\",\n  nanoS = \"nanoS\",\n  nanoSP = \"nanoSP\",\n  nanoX = \"nanoX\",\n  nanoFTS = \"nanoFTS\",\n}\n\nconst devices: { [key in DeviceModelId]: DeviceModel } = {\n  [DeviceModelId.blue]: {\n    id: DeviceModelId.blue,\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    masks: [0x31000000, 0x31010000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n  },\n  [DeviceModelId.nanoS]: {\n    id: DeviceModelId.nanoS,\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    masks: [0x31100000],\n    getBlockSize: (firmwareVersion: string): number =>\n      semver.lt(semver.coerce(firmwareVersion) ?? \"\", \"2.0.0\")\n        ? 4 * 1024\n        : 2 * 1024,\n  },\n  [DeviceModelId.nanoSP]: {\n    id: DeviceModelId.nanoSP,\n    productName: \"Ledger Nano S Plus\",\n    productIdMM: 0x50,\n    legacyUsbProductId: 0x0005,\n    usbOnly: true,\n    memorySize: 1536 * 1024,\n    masks: [0x33100000],\n    getBlockSize: (_firmwareVersion: string): number => 32,\n  },\n  [DeviceModelId.nanoX]: {\n    id: DeviceModelId.nanoX,\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    masks: [0x33000000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\",\n      },\n    ],\n  },\n  [DeviceModelId.nanoFTS]: {\n    id: DeviceModelId.nanoFTS,\n    productName: \"Ledger Nano FTS\",\n    productIdMM: 0x60,\n    legacyUsbProductId: 0x0006,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024, // ← ↓ TODO Update with actual values\n    masks: [0x33200000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\",\n      },\n    ],\n  },\n};\n\nconst productMap = {\n  Blue: DeviceModelId.blue,\n  \"Nano S\": DeviceModelId.nanoS,\n  \"Nano S Plus\": DeviceModelId.nanoSP,\n  \"Nano X\": DeviceModelId.nanoX,\n  \"Nano FTS\": DeviceModelId.nanoFTS,\n};\n\nconst devicesList: DeviceModel[] = Object.values(devices);\n\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n\n/**\n *\n */\nexport const getDeviceModel = (id: DeviceModelId): DeviceModel => {\n  const info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\nexport const identifyTargetId = (\n  targetId: number\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find(({ masks }) =>\n    masks.find((mask) => (targetId & 0xffff0000) === mask)\n  );\n\n  return deviceModel;\n};\n\n/**\n *\n */\nexport const identifyUSBProductId = (\n  usbProductId: number\n): DeviceModel | null | undefined => {\n  const legacy = devicesList.find((d) => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find((d) => d.productIdMM === mm);\n  return deviceModel;\n};\n\nexport const identifyProductName = (\n  productName: string\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find((d) => d.id === productMap[productName]);\n  return deviceModel;\n};\n\nconst bluetoothServices: string[] = [];\nconst serviceUuidToInfos: Record<string, BluetoothInfos> = {};\n\nfor (const id in devices) {\n  const deviceModel = devices[id];\n  const { bluetoothSpec } = deviceModel;\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[\n        spec.serviceUuid.replace(/-/g, \"\")\n      ] = {\n        deviceModel,\n        ...spec,\n      };\n    }\n  }\n}\n\n/**\n *\n */\nexport const getBluetoothServiceUuids = (): string[] => bluetoothServices;\n\n/**\n *\n */\nexport const getInfosForServiceUuid = (\n  uuid: string\n): BluetoothInfos | undefined => serviceUuidToInfos[uuid.toLowerCase()];\n\n/**\n *\n */\nexport interface DeviceModel {\n  id: DeviceModelId;\n  productName: string;\n  productIdMM: number;\n  legacyUsbProductId: number;\n  usbOnly: boolean;\n  memorySize: number;\n  masks: number[];\n  // blockSize: number, // THIS FIELD IS DEPRECATED, use getBlockSize\n  getBlockSize: (firmwareVersion: string) => number;\n  bluetoothSpec?: {\n    serviceUuid: string;\n    writeUuid: string;\n    writeCmdUuid: string;\n    notifyUuid: string;\n  }[];\n}\n\n/**\n *\n */\nexport interface BluetoothInfos {\n  deviceModel: DeviceModel;\n  serviceUuid: string;\n  writeUuid: string;\n  writeCmdUuid: string;\n  notifyUuid: string;\n}\n","export type TraceContext = Record<string, unknown>;\nexport type LogData = any;\nexport type LogType = string;\n\n/**\n * A Log object\n */\nexport interface Log {\n  /**\n   * A namespaced identifier of the log (not a level like \"debug\", \"error\" but more like \"apdu\", \"hw\", etc...)\n   */\n  type: LogType;\n  message?: string;\n  /**\n   * Data associated to the log event\n   */\n  data?: LogData;\n  /**\n   * Context data, coming for example from the caller's parent, to enable a simple tracing system\n   */\n  context?: TraceContext;\n  /**\n   * Unique id among all logs\n   */\n  id: string;\n  /*\n   * Date when the log occurred\n   */\n  date: Date;\n}\n\nexport type Unsubscribe = () => void;\nexport type Subscriber = (arg0: Log) => void;\n\nlet id = 0;\nconst subscribers: Subscriber[] = [];\n\n/**\n * Logs something\n *\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: LogType, message?: string, data?: LogData) => {\n  const obj: Log = {\n    type,\n    id: String(++id),\n    date: new Date(),\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * A simple tracer function, only expanding the existing log function\n *\n * Its goal is to capture more context than a log function.\n * This is simple for now, but can be improved later.\n *\n * @param context Anything representing the context where the log occurred\n */\nexport const trace = ({\n  type,\n  message,\n  data,\n  context,\n}: {\n  type: LogType;\n  message?: string;\n  data?: LogData;\n  context?: TraceContext;\n}) => {\n  const obj: Log = {\n    type,\n    id: String(++id),\n    date: new Date(),\n  };\n\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  if (context) obj.context = context;\n\n  dispatch(obj);\n};\n\n/**\n * A simple tracer class, that can be used to avoid repetition when using the `trace` function\n *\n * Its goal is to capture more context than a log function.\n * This is simple for now, but can be improved later.\n *\n * @param type A given type (not level) for the current local tracer (\"hw\", \"withDevice\", etc.)\n * @param context Anything representing the context where the log occurred\n */\nexport class LocalTracer {\n  constructor(\n    private type: LogType,\n    private context?: TraceContext,\n  ) {}\n\n  trace(message: string, data?: TraceContext) {\n    trace({\n      type: this.type,\n      message,\n      data,\n      context: this.context,\n    });\n  }\n\n  getContext(): TraceContext | undefined {\n    return this.context;\n  }\n\n  setContext(context?: TraceContext) {\n    this.context = context;\n  }\n\n  updateContext(contextToAdd: TraceContext) {\n    this.context = { ...this.context, ...contextToAdd };\n  }\n\n  getType(): LogType {\n    return this.type;\n  }\n\n  setType(type: LogType) {\n    this.type = type;\n  }\n\n  /**\n   * Create a new instance of the LocalTracer with an updated `type`\n   *\n   * It does not mutate the calling instance, but returns a new LocalTracer,\n   * following a simple builder pattern.\n   */\n  withType(type: LogType): LocalTracer {\n    return new LocalTracer(type, this.context);\n  }\n\n  /**\n   * Create a new instance of the LocalTracer with a new `context`\n   *\n   * It does not mutate the calling instance, but returns a new LocalTracer,\n   * following a simple builder pattern.\n   *\n   * @param context A TraceContext, that can undefined to reset the context\n   */\n  withContext(context?: TraceContext): LocalTracer {\n    return new LocalTracer(this.type, context);\n  }\n\n  /**\n   * Create a new instance of the LocalTracer with an updated `context`,\n   * on which an additional context is merged with the existing one.\n   *\n   * It does not mutate the calling instance, but returns a new LocalTracer,\n   * following a simple builder pattern.\n   */\n  withUpdatedContext(contextToAdd: TraceContext): LocalTracer {\n    return new LocalTracer(this.type, { ...this.context, ...contextToAdd });\n  }\n}\n\n/**\n * Adds a subscribers to the emitted logs.\n *\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: Subscriber): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\n\ndeclare global {\n  interface Window {\n    __ledgerLogsListen: any;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n","import Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n  TransportError,\n} from \"@ledgerhq/errors\";\n\nconst ledgerDevices = [\n  {\n    vendorId: ledgerUSBVendorId,\n  },\n];\n\nconst isSupported = () =>\n  Promise.resolve(!!(window.navigator && window.navigator.hid));\n\nconst getHID = (): HID => {\n  // $FlowFixMe\n  const { hid } = navigator;\n  if (!hid)\n    throw new TransportError(\n      \"navigator.hid is not supported\",\n      \"HIDNotSupported\"\n    );\n  return hid;\n};\n\nasync function requestLedgerDevices(): Promise<HIDDevice[]> {\n  const device = await getHID().requestDevice({\n    filters: ledgerDevices,\n  });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices(): Promise<HIDDevice[]> {\n  const devices = await getHID().getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice(): Promise<HIDDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\n\nexport default class TransportWebHID extends Transport {\n  device: HIDDevice;\n  deviceModel: DeviceModel | null | undefined;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n\n  constructor(device: HIDDevice) {\n    super();\n    this.device = device;\n    this.deviceModel =\n      typeof device.productId === \"number\"\n        ? identifyUSBProductId(device.productId)\n        : undefined;\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  inputs: Buffer[] = [];\n  inputCallback: ((arg0: Buffer) => void) | null | undefined;\n  read = (): Promise<Buffer> => {\n    if (this.inputs.length) {\n      return Promise.resolve((this.inputs.shift() as unknown) as Buffer);\n    }\n\n    return new Promise((success) => {\n      this.inputCallback = success;\n    });\n  };\n  onInputReport = (e: HIDInputReportEvent) => {\n    const buffer = Buffer.from(e.data.buffer);\n\n    if (this.inputCallback) {\n      this.inputCallback(buffer);\n      this.inputCallback = null;\n    } else {\n      this.inputs.push(buffer);\n    }\n  };\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<HIDDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!device) {\n          observer.error(\n            new TransportOpenUserCancelled(\"Access denied to use Ledger device\")\n          );\n        } else if (!unsubscribed) {\n          const deviceModel =\n            typeof device.productId === \"number\"\n              ? identifyUSBProductId(device.productId)\n              : undefined;\n          observer.next({\n            type: \"add\",\n            descriptor: device,\n            deviceModel,\n          });\n          observer.complete();\n        }\n      },\n      (error) => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    );\n\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n\n    return {\n      unsubscribe,\n    };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  static async open(device: HIDDevice) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = async (apdu: Buffer): Promise<Buffer> => {\n    const b = await this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n      const framing = hidFraming(channel, packetSize);\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n\n      throw e;\n    });\n    return b as Buffer;\n  };\n\n  setScrambleKey() {}\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"names":["errors_1","require","asUInt16BE","value","b","Buffer","alloc","writeUInt16BE","initialAcc","data","dataLength","sequence","exports","channel","packetSize","makeBlocks","apdu","concat","length","blockSize","nbBlocks","Math","ceil","fill","blocks","i","head","writeUInt8","chunk","slice","push","reduceResponse","acc","_a","readUInt16BE","TransportError","readUInt8","chunkData","getReducedResult","ANY","Symbol","Comparator","constructor","comp","options","parseOptions","loose","trim","split","join","debug","this","parse","semver","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","TypeError","undefined","SemVer","toString","test","er","cmp","intersects","Range","includePrerelease","startsWith","includes","module","safeRe","range","raw","set","format","map","parseRange","filter","c","first","isNullSet","isAny","comps","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","cache","get","hr","HYPHENRANGELOOSE","HYPHENRANGE","replace","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","rangeList","parseComparator","replaceGTE0","rangeMap","Map","comparators","size","has","delete","result","values","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","testSet","remainingComparators","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","id","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","num","build","compare","other","compareMain","comparePre","a","compareBuild","inc","release","identifier","identifierBase","base","Number","Error","isNaN","clean","s","eq","neq","gt","gte","lt","lte","op","coerce","String","rtl","coerceRtlRegex","COERCERTLFULL","COERCERTL","next","exec","index","lastIndex","COERCEFULL","COERCE","versionA","versionB","compareLoose","diff","version1","version2","v1","v2","comparison","v1Higher","highVersion","lowVersion","highHasPre","prefix","throwErrors","arguments","parsed","rcompare","rsort","list","sort","satisfies","valid","v","internalRe","constants","identifiers","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","src","tokens","SEMVER_SPEC_VERSION","RELEASE_TYPES","rcompareIdentifiers","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","process","NODE_DEBUG","_len","args","Array","_key","console","error","numeric","anum","bnum","max","key","firstKey","keys","looseOption","Object","freeze","emptyOpts","R","LETTERDASHNUMBER","safeRegexReplacements","createToken","name","isGlobal","safe","token","makeSafeRegex","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCEPLAIN","LONETILDE","LONECARET","r1","r2","versions","maxSV","rangeObj","forEach","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","prev","ranges","simplified","original","minimumVersionWithPreRelease","minimumVersion","simpleSubset","sub","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","add","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","DeviceModelId","devices","blue","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","nanoS","firmwareVersion","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","nanoFTS","devicesList","ledgerUSBVendorId","identifyUSBProductId","usbProductId","legacy","find","d","mm","bluetoothServices","serviceUuidToInfos","deviceModel","spec","__assign","subscribers","log","type","message","obj","date","Date","dispatch","listen","cb","indexOf","e","window","__ledgerLogsListen","ledgerDevices","vendorId","isSupported","Promise","resolve","navigator","hid","getHID","requestLedgerDevices","requestDevice","filters","device","sent","isArray","getLedgerDevices","getDevices","TransportWebHID","_super","_this","call","floor","random","inputs","read","shift","success","inputCallback","onInputReport","buffer","_disconnectEmitted","_emitDisconnect","emit","exchange","__awaiter","exchangeAtomicImpl","framing","hidFraming","sendReport","_b","DisconnectedDeviceDuringOperation","productId","addEventListener","__extends","request","__read","apply","open","openConnected","transport","onDisconnect","removeEventListener","DisconnectedDevice","prototype","close","exchangeBusyPromise","setScrambleKey","observer","unsubscribed","existingDevices","getFirstLedgerDevice","then","descriptor","complete","TransportOpenUserCancelled","unsubscribe","Transport","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","on","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask"],"sourceRoot":""}